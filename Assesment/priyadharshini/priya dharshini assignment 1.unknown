{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1l2ewRyxb2g16e6Ni1AxTCTCUdR49V7XK","timestamp":1663249245292}],"collapsed_sections":[],"authorship_tag":"ABX9TyOBMwJZuUqu/FsYbimaGMdh"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"cIY9kQ6XXsx1"},"outputs":[],"source":["Basic Python\n","1. Split this string\n","s = \"Hi there gayathri!\"\n","x=s.split()\n","print(x)\n","['Hi', 'there', 'gayathri!']\n","2. Use .format() to print the following string.\n","Output should be: The diameter of Earth is 12742 kilometers.\n","planet = \"Earth\"\n","diameter = 12742\n","print(\"The diameter of {planet} is {diameter} kilometers\".format(planet=\"Earth\",diameter=12742))\n","The diameter of Earth is 12742 kilometers\n","3. In this nest dictionary grab the word \"hello\"\n","d = {'k1':[1,2,3,{'tricky':['oh','man','inception',{'target':[1,2,3,'hello']}]}]}\n","print(d['k1'][3]['tricky'][3]['target'][3])\n","hello\n","Numpy\n","import numpy as np\n","4.1 Create an array of 10 zeros?\n","4.2 Create an array of 10 fives?\n","a=np.zeros(10) \n","print(a)\n","[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n","b=np.ones(10)*5\n","print(b)\n","5. Create an array of all the even integers from 20 to 35\n","c=np.arange(20,35,2)\n","print(c)\n","[20 22 24 26 28 30 32 34]\n","6. Create a 3x3 matrix with values ranging from 0 to 8\n","d=np.arange(0,9).reshape(3,3)\n","print(d)\n","[[0 1 2]\n"," [3 4 5]\n"," [6 7 8]]\n","7. Concatenate a and b\n","a = np.array([1, 2, 3]), b = np.array([4, 5, 6])\n","a=np.array([1,2,3])\n","b=np.array([4,5,6])\n","e=np.concatenate((a,b),axis=None)\n","print(e)\n","[1 2 3 4 5 6]\n","Pandas\n","8. Create a dataframe with 3 rows and 2 columns\n","import pandas as pd\n","data=[['ram',21],['nick',22],['dom',26]]\n","f=pd.DataFrame(data,columns=['name','age'])\n","print(f)\n","   name  age\n","0   ram   21\n","1  nick   22\n","2   dom   26\n","9. Generate the series of dates from 1st Jan, 2023 to 10th Feb, 2023\n","dates=pd.date_range(start='1-1-2023',end='2-10-2023')\n","for val in dates:\n","  print(val)\n","2023-01-01 00:00:00\n","2023-01-02 00:00:00\n","2023-01-03 00:00:00\n","2023-01-04 00:00:00\n","2023-01-05 00:00:00\n","2023-01-06 00:00:00\n","2023-01-07 00:00:00\n","2023-01-08 00:00:00\n","2023-01-09 00:00:00\n","2023-01-10 00:00:00\n","2023-01-11 00:00:00\n","2023-01-12 00:00:00\n","2023-01-13 00:00:00\n","2023-01-14 00:00:00\n","2023-01-15 00:00:00\n","2023-01-16 00:00:00\n","2023-01-17 00:00:00\n","2023-01-18 00:00:00\n","2023-01-19 00:00:00\n","2023-01-20 00:00:00\n","2023-01-21 00:00:00\n","2023-01-22 00:00:00\n","2023-01-23 00:00:00\n","2023-01-24 00:00:00\n","2023-01-25 00:00:00\n","2023-01-26 00:00:00\n","2023-01-27 00:00:00\n","2023-01-28 00:00:00\n","2023-01-29 00:00:00\n","2023-01-30 00:00:00\n","2023-01-31 00:00:00\n","2023-02-01 00:00:00\n","2023-02-02 00:00:00\n","2023-02-03 00:00:00\n","2023-02-04 00:00:00\n","2023-02-05 00:00:00\n","2023-02-06 00:00:00\n","2023-02-07 00:00:00\n","2023-02-08 00:00:00\n","2023-02-09 00:00:00\n","2023-02-10 00:00:00\n","10. Create 2D list to DataFrame\n","lists = [[1, 'aaa', 22], [2, 'bbb', 25], [3, 'ccc', 24]]\n","\n","lists = [[1, 'aaa', 22], [2, 'bbb', 25], [3, 'ccc', 24]]\n","dframe=pd.DataFrame(lists,columns=['rank','name','age'])\n","print(dframe)\n","   rank name  age\n","0     1  aaa   22\n","1     2  bbb   25\n","2     3  ccc   24"]}]}